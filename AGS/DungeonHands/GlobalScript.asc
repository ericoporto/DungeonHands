// main global script file

// called when the game starts, before the first room is loaded
function game_start() 
{
  SetGameSpeed(60);
  mouse.Mode = eModePointer;
  System.Volume = 70;
}

// put anything you want to happen every game cycle in here
function repeatedly_execute() 
{
}

// put here anything you want to happen every game cycle, even when the game is blocked
function repeatedly_execute_always() 
{
}

String RoomHelpText;
export RoomHelpText;
void DisplayRoomHelp()
{
  String help_text = "[[Press H for help.[Press 1-4 to change between rooms.";
  if (!String.IsNullOrEmpty(RoomHelpText))
    help_text = RoomHelpText.Append(help_text);
  Display(help_text);
}

// called when a key is pressed. keycode holds the key's ASCII code
function on_key_press(eKeyCode keycode) 
{
  if (keycode == eKeyH)
    DisplayRoomHelp();
  if (keycode >= eKey1 && keycode <= eKey4)
    player.ChangeRoom(keycode - eKey1 + 1);
  if (keycode == eKeyCtrlV) Debug(1,0); // Ctrl-V, version
  if (keycode == eKeyCtrlX) Debug(3,0); // Ctrl-X, teleport to room
}

function on_mouse_click(MouseButton button) // called when a mouse button is clicked. button is either LEFT or RIGHT
{
  if (IsGamePaused() == 1) // Game is paused, so do nothing (ie. don't allow mouse click)
  {
  }
  else if (button == eMouseLeft) 
  {
    Room.ProcessClick(mouse.x,mouse.y, mouse.Mode);
  }
  else // right-click, so cycle cursor
  {   
    
  }
}


function dialog_request(int param) {
}


function gDebugPlay_OnClick(GUI *theGui, MouseButton button)
{
}

function Button1_OnClick(GUIControl *control, MouseButton button)
{

  if(Button1.Text.CompareTo("no rlz")==0){
    Play_disableRules();
    Button1.Text = "ye rlz";
  } else {
    Play_enableRules();
    Button1.Text = "no rlz";
  }
}

function gDeckMonster_OnClic(GUI *theGui, MouseButton button)
{
  Play_deckDraw_MC();
}

function gDeckHero_OnClick(GUI *theGui, MouseButton button)
{
  Play_deckDraw_HC();
}
