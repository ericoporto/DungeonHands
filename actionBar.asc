// new module script
String action_text;
String shown_action_text;

void AdjustActionTextPosition() 
{  
  int txtHeight = GetTextHeight(lblActionText.Text, eFontFontBeanStalk, lblActionText.Width);
  int ymouse = 14-txtHeight;
  int txtWidth = GetTextWidth(lblActionText.Text, eFontFontBeanStalk);
  if(txtWidth > lblActionText.Width){
    txtWidth = lblActionText.Width;
  }
  int actionLabelWidth = txtWidth + 4;
  
  if(actionLabelWidth <= 6){
    gActionText.Transparency = 100;
  } else {
    gActionText.Transparency = 0;  
  }
  int actionLabelHalf = actionLabelWidth / 2;
  int xpos;
  int ypos;
  
   
  //prefer mouse
  xpos = mouse.x - actionLabelHalf ;
  ypos = mouse.y - Game.SpriteHeight[mouse.GetModeGraphic(mouse.Mode)] - 4 +ymouse;
  
  if (xpos + actionLabelWidth >= System.ScreenWidth) xpos = System.ScreenWidth - actionLabelWidth;
  else if (xpos < 0) xpos = 0;
  
  
  if (ypos + txtHeight+2 >= System.ScreenHeight) ypos = System.ScreenHeight - txtHeight -2;  //untested
  else {
    if (ypos < 0 ) ypos = 0;
  }
  
  gActionText.X = xpos;
  gActionText.Y = ypos;
  
  gActionText.Height = txtHeight+8;
  lblActionText.Height = txtHeight+8;
  gActionText.Width = actionLabelWidth;   
}


//----------------------------------------------------------------------------------------------------
// repeatedly_execute_always()
//----------------------------------------------------------------------------------------------------
function repeatedly_execute_always(){
  AdjustActionTextPosition();
}

InventoryItem * previous_iitm;
String separator;
//----------------------------------------------------------------------------------------------------
// repeatedly_execute()
//----------------------------------------------------------------------------------------------------
function repeatedly_execute()
{
	// Action Text
  InventoryItem * iitm = InventoryItem.GetAtScreenXY(mouse.x, mouse.y);
  if (iitm != null)
  {
    String cardname;
    String cardtext;
    int color;
    int rank;
    
    if(iitm!=previous_iitm){
      previous_iitm=iitm;  
    } else {
      return;  
    }
    
    if(Cards_isItemMonster(iitm)){
      int crd;
      crd = Cards_MC_ItemToCard(iitm);
      cardname=Card_MC_getCardName(crd);
      cardtext=Card_MC_getCardText(crd);
      color=Card_MC_getCardColor(crd);
      rank=Card_MC_getCardRank(crd);
      
    } else {
      int crd;
      crd = Cards_HC_ItemToCard(iitm);
      cardname=Card_HC_getCardName(crd);
      cardtext=Card_HC_getCardText(crd);
      color=Card_HC_getCardColor(crd);
      rank=Card_HC_getCardRank(crd);
      
    }
   // iitm
    if( cardtext.Length>2){
      lblActionText.Text = String.Format("%s %s %s",cardname, separator, cardtext);
    } else {
      lblActionText.Text = cardname;
    }
  } else {
    lblActionText.Text = "";
    previous_iitm=null;
  }
}

//----------------------------------------------------------------------------------------------------
// game_start()
//----------------------------------------------------------------------------------------------------
function game_start(){
	lblActionText.Text = "";	
  separator = "[---[";
}

